<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>