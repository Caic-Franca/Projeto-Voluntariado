<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>