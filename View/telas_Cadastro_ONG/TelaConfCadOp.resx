<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAD
        rwAAA68BGB6xfQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAA4pSURBVHhe7Z0H
        rDVFGYZfOyIW7L2XROzGLqBYsAuKPWLvBWNUNCpib1hiiQUril1RERuoWEFEUVE0sSL2rmCveU7m3Nz/
        u7Nlyp4zO3fe5E3+/+7uN7Oze2ZnvirVhzNJuryk20t6jKSXSHqPpGMlnSzp55J+L+kMSf9z5N/8jWOc
        w7lcc4ikRztZl3OyGwrDxSXdTdLLJX1R0p83Pdjc/JOkL0h6maT9JF3MdqZhepxd0q0kvVTSdz0PadU8
        xc0y9Im+NUyAs0q6jaQ3S/qD5yGUQj4jb5K0t+tzQyIuIelASad6Brt0sp54gVuPNARid0kflPQfz8DO
        jdzDEZJuam+yYStYbX/ZM4i18Dj3KWswuLmkL3kGrFayW9nTDsJ2BNuowyT91zNI24FHSrqUHZTtAFbI
        B7h9tR2U7UaUUCx0t82u4caSvu4ZiKn5d0k/knSipKMd0fbB5f85xjmca6+fmidJupEdrJpwFknPWsHK
        /jeSPirphZLuK+k6ki5kOzMCXMO1+ztZyPytp72cZGwOdmNVFVDXfsZzwznIFPp+SY+SdLWJ9fXIpg3s
        Ax+Q9BdPf3Lw0zWpmW8t6Veem0wh+n60gneSdE7b4ApB23eW9FZJp3v6mcJfSrqlbXBO4NeSe8o/XtKD
        Je1iGysA55b0EEknePody+UnYcpZbRLwDXuD54ZiyBaR7dKcFkisHdje/ttzPzFE1tlsI6ViZ0lHeW4i
        lDz4d0m6qm1gRthN0rsz6Tn4ETC2RWNXZy+3nQ8lU31NuvPrSfqs5z5DiZr8glZ4KcBy9y1Pp0PIYvFe
        VnBFuHeGBTFjzK6qKJxX0jc8nQ0hCpli3+6MYJZ8XeJn4duSzm8Frwt8l1IMOb9z27nthn3cvdvxGEs+
        tWtfE7AyTVnw8U3D2XK7AkPQ5z3jMpYfWacNgb0p2xPbqbF85To7XxAYg1d7xmcscUFbi54AJY/tzBj+
        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
</value>
  </data>
</root>