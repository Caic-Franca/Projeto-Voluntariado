<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>